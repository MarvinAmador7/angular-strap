{"version":3,"sources":["modules/modal.js"],"names":["angular","placement","provider","templateUrl","this","defaults","template","contentTemplate","container","element","backdrop","keyboard","html","show","$get","forEach","requestAnimationFrame","bodyElement","backdropCount","dialogBaseZindex","ModalFactory","config","scope","$emit","options","prefixEvent","$modal","toggle","$isShown","hide","animation","unbindBackdropEvents","modalElement","off","hideOnBackdropClick","backdropElement","preventEventDefault","bindKeyboardEvents","on","$onKeyUp","focus","evt","preventDefault","modalScope","$destroy","$element","$options","extend","key","promise","trustAsHtml","$scope","$new","$rootScope","$hide","$$postDigest","$id","id","attr","$show","$sce","left","bottom","right","prefixClass","css","compileData","init","data","destroy","destroyModalElement","remove","parent","after","isElement","z-index","backdropBaseZindex","link","clonedElement","addClass","customClass","display","$animate","enter","minor","backdropAnimation","el","enterAnimateCallback","then","safeDigest","bindBackdropEvents","version","leave","defaultPrevented","leaveAnimateCallback","removeClass","unbindKeyboardEvents","which","directive","$root","$$phase","$window","restrict","query","document","querySelectorAll","$promise","$bsCompiler","compile","isDefined","falseValueRegExp","test","modalClass","$watch","isObject","newValue","oldValue","bsModal","modal","trigger","$on"],"mappings":"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","file":"modules/modal.min.js","sourcesContent":["'use strict';\n\nangular.module('mgcrea.ngStrap.modal', ['mgcrea.ngStrap.core', 'mgcrea.ngStrap.helpers.dimensions'])\n\n  .provider('$modal', function () {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      backdropAnimation: 'am-fade',\n      customClass: '',\n      prefixClass: 'modal',\n      prefixEvent: 'modal',\n      placement: 'top',\n      templateUrl: 'modal/modal.tpl.html',\n      template: '',\n      contentTemplate: false,\n      container: false,\n      element: null,\n      backdrop: true,\n      keyboard: true,\n      html: false,\n      show: true\n    };\n\n    this.$get = function ($window, $rootScope, $bsCompiler, $animate, $timeout, $sce, dimensions) {\n\n      var forEach = angular.forEach;\n      var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\n      var bodyElement = angular.element($window.document.body);\n\n      var backdropCount = 0;\n      var dialogBaseZindex = 1050;\n      var backdropBaseZindex = 1040;\n\n      function ModalFactory(config) {\n\n        var $modal = {};\n\n        // Common vars\n        var options = $modal.$options = angular.extend({}, defaults, config);\n        var promise = $modal.$promise = $bsCompiler.compile(options);\n        var scope = $modal.$scope = options.scope && options.scope.$new() || $rootScope.$new();\n\n        if (!options.element && !options.container) {\n          options.container = 'body';\n        }\n\n        // Store $id to identify the triggering element in events\n        // give priority to options.id, otherwise, try to use\n        // element id if defined\n        $modal.$id = options.id || options.element && options.element.attr('id') || '';\n\n        // Support scope as string options\n        forEach(['title', 'content'], function (key) {\n          if (options[key]) scope[key] = $sce.trustAsHtml(options[key]);\n        });\n\n        // Provide scope helpers\n        scope.$hide = function () {\n          scope.$$postDigest(function () {\n            $modal.hide();\n          });\n        };\n        scope.$show = function () {\n          scope.$$postDigest(function () {\n            $modal.show();\n          });\n        };\n        scope.$toggle = function () {\n          scope.$$postDigest(function () {\n            $modal.toggle();\n          });\n        };\n        // Publish isShown as a protected var on scope\n        $modal.$isShown = scope.$isShown = false;\n\n        // Fetch, compile then initialize modal\n        var compileData;\n        var modalElement;\n        var modalScope;\n        var backdropElement = angular.element('<div class=\"' + options.prefixClass + '-backdrop\"/>');\n        backdropElement.css({position: 'fixed', top: '0px', left: '0px', bottom: '0px', right: '0px'});\n        promise.then(function (data) {\n          compileData = data;\n          $modal.init();\n        });\n\n        $modal.init = function () {\n\n          // Options: show\n          if (options.show) {\n            scope.$$postDigest(function () {\n              $modal.show();\n            });\n          }\n\n        };\n\n        $modal.destroy = function () {\n\n          // Remove element\n          destroyModalElement();\n\n          // remove backdrop element\n          if (backdropElement) {\n            backdropElement.remove();\n            backdropElement = null;\n          }\n\n          // Destroy scope\n          scope.$destroy();\n        };\n\n        $modal.show = function () {\n          if ($modal.$isShown) return;\n          $rootScope.$emit('modal_fired', $modal.$isShown);\n          var parent;\n          var after;\n          if (angular.isElement(options.container)) {\n            parent = options.container;\n            after = options.container[0].lastChild ? angular.element(options.container[0].lastChild) : null;\n          } else {\n            if (options.container) {\n              parent = findElement(options.container);\n              after = parent[0] && parent[0].lastChild ? angular.element(parent[0].lastChild) : null;\n            } else {\n              parent = null;\n              after = options.element;\n            }\n          }\n\n          // destroy any existing modal elements\n          if (modalElement) destroyModalElement();\n\n          // create a new scope, so we can destroy it and all child scopes\n          // when destroying the modal element\n          modalScope = $modal.$scope.$new();\n          // Fetch a cloned element linked from template (noop callback is required)\n          modalElement = $modal.$element = compileData.link(modalScope, function (clonedElement, scope) {});\n\n          if (options.backdrop) {\n            // set z-index\n            modalElement.css({'z-index': dialogBaseZindex + (backdropCount * 20)});\n            backdropElement.css({'z-index': backdropBaseZindex + (backdropCount * 20)});\n\n            // increment number of backdrops\n            backdropCount++;\n          }\n\n          if (scope.$emit(options.prefixEvent + '.show.before', $modal).defaultPrevented) {\n            return;\n          }\n\n          // Set the initial positioning.\n          modalElement.css({display: 'block'}).addClass(options.placement);\n\n          // Options: customClass\n          if (options.customClass) {\n            modalElement.addClass(options.customClass);\n          }\n\n          // Options: animation\n          if (options.animation) {\n            if (options.backdrop) {\n              backdropElement.addClass(options.backdropAnimation);\n            }\n            modalElement.addClass(options.animation);\n          }\n\n          if (options.backdrop) {\n            $animate.enter(backdropElement, bodyElement, null);\n          }\n\n          // Support v1.2+ $animate\n          // https://github.com/angular/angular.js/issues/11713\n          if (angular.version.minor <= 2) {\n            $animate.enter(modalElement, parent, after, enterAnimateCallback);\n          } else {\n            $animate.enter(modalElement, parent, after).then(enterAnimateCallback);\n          }\n\n          $modal.$isShown = scope.$isShown = true;\n          safeDigest(scope);\n          // Focus once the enter-animation has started\n          // Weird PhantomJS bug hack\n          var el = modalElement[0];\n          requestAnimationFrame(function () {\n            el.focus();\n          });\n\n          bodyElement.addClass(options.prefixClass + '-open');\n          if (options.animation) {\n            bodyElement.addClass(options.prefixClass + '-with-' + options.animation);\n          }\n\n          // Bind events\n          bindBackdropEvents();\n          bindKeyboardEvents();\n        };\n\n        function enterAnimateCallback() {\n          scope.$emit(options.prefixEvent + '.show', $modal);\n        }\n\n        $modal.hide = function () {\n          if (!$modal.$isShown) return;\n          $rootScope.$emit('modal_fired', $modal.$isShown);\n          if (options.backdrop) {\n            // decrement number of modals\n            backdropCount--;\n          }\n\n          if (scope.$emit(options.prefixEvent + '.hide.before', $modal).defaultPrevented) {\n            return;\n          }\n\n          // Support v1.2+ $animate\n          // https://github.com/angular/angular.js/issues/11713\n          if (angular.version.minor <= 2) {\n            $animate.leave(modalElement, leaveAnimateCallback);\n          } else {\n            $animate.leave(modalElement).then(leaveAnimateCallback);\n          }\n\n          if (options.backdrop) {\n            $animate.leave(backdropElement);\n          }\n          $modal.$isShown = scope.$isShown = false;\n          safeDigest(scope);\n\n          // Unbind events\n          unbindBackdropEvents();\n          unbindKeyboardEvents();\n        };\n\n        function leaveAnimateCallback() {\n          scope.$emit(options.prefixEvent + '.hide', $modal);\n          bodyElement.removeClass(options.prefixClass + '-open');\n          if (options.animation) {\n            bodyElement.removeClass(options.prefixClass + '-with-' + options.animation);\n          }\n        }\n\n        $modal.toggle = function () {\n          if ($modal.$isShown) {\n            $modal.hide();\n          } else {\n            $modal.show();\n          }\n        };\n\n        $modal.focus = function () {\n          modalElement[0].focus();\n        };\n\n        // Protected methods\n\n        $modal.$onKeyUp = function (evt) {\n\n          if (evt.which === 27 && $modal.$isShown) {\n            $modal.hide();\n            evt.stopPropagation();\n          }\n\n        };\n\n        function bindBackdropEvents() {\n          if (options.backdrop) {\n            modalElement.on('click', hideOnBackdropClick);\n            backdropElement.on('click', hideOnBackdropClick);\n            backdropElement.on('wheel', preventEventDefault);\n          }\n        }\n\n        function unbindBackdropEvents() {\n          if (options.backdrop) {\n            modalElement.off('click', hideOnBackdropClick);\n            backdropElement.off('click', hideOnBackdropClick);\n            backdropElement.off('wheel', preventEventDefault);\n          }\n        }\n\n        function bindKeyboardEvents() {\n          if (options.keyboard) {\n            modalElement.on('keyup', $modal.$onKeyUp);\n          }\n        }\n\n        function unbindKeyboardEvents() {\n          if (options.keyboard) {\n            modalElement.off('keyup', $modal.$onKeyUp);\n          }\n        }\n\n        // Private helpers\n\n        function hideOnBackdropClick(evt) {\n          if (evt.target !== evt.currentTarget) return;\n          if (options.backdrop === 'static') {\n            $modal.focus();\n          } else {\n            $modal.hide();\n          }\n        }\n\n        function preventEventDefault(evt) {\n          evt.preventDefault();\n        }\n\n        function destroyModalElement() {\n          if ($modal.$isShown && modalElement !== null) {\n            // un-bind events\n            unbindBackdropEvents();\n            unbindKeyboardEvents();\n          }\n\n          if (modalScope) {\n            modalScope.$destroy();\n            modalScope = null;\n          }\n\n          if (modalElement) {\n            modalElement.remove();\n            modalElement = $modal.$element = null;\n          }\n        }\n\n        return $modal;\n\n      }\n\n      // Helper functions\n\n      function safeDigest(scope) {\n        /* eslint-disable no-unused-expressions */\n        scope.$$phase || (scope.$root && scope.$root.$$phase) || scope.$digest();\n        /* eslint-enable no-unused-expressions */\n      }\n\n      function findElement(query, element) {\n        return angular.element((element || document).querySelectorAll(query));\n      }\n\n      return ModalFactory;\n\n    };\n\n  })\n\n  .directive('bsModal', function ($window, $sce, $modal) {\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink(scope, element, attr, transclusion) {\n\n        // Directive options\n        var options = {scope: scope, element: element, show: false};\n        angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'contentTemplate', 'placement', 'backdrop', 'keyboard', 'html', 'container', 'animation', 'backdropAnimation', 'id', 'prefixEvent', 'prefixClass', 'customClass', 'modalClass'], function (key) {\n          if (angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // Options: alias modalClass to customClass\n        if (options.modalClass) {\n          options.customClass = options.modalClass;\n        }\n\n        // use string regex match boolean attr falsy values, leave truthy values be\n        var falseValueRegExp = /^(false|0|)$/i;\n        angular.forEach(['backdrop', 'keyboard', 'html', 'container'], function (key) {\n          if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) options[key] = false;\n        });\n\n        // Support scope as data-attrs\n        angular.forEach(['title', 'content'], function (key) {\n          if (attr[key]) {\n            attr.$observe(key, function (newValue, oldValue) {\n              scope[key] = $sce.trustAsHtml(newValue);\n            });\n          }\n        });\n\n        // Support scope as an object\n        if (attr.bsModal) {\n          scope.$watch(attr.bsModal, function (newValue, oldValue) {\n            if (angular.isObject(newValue)) {\n              angular.extend(scope, newValue);\n            } else {\n              scope.content = newValue;\n            }\n          }, true);\n        }\n\n        // Initialize modal\n        var modal = $modal(options);\n\n        // Trigger\n        element.on(attr.trigger || 'click', modal.toggle);\n\n        // Garbage collection\n        scope.$on('$destroy', function () {\n          if (modal) modal.destroy();\n          options = null;\n          modal = null;\n        });\n\n      }\n    };\n\n  });\n"],"sourceRoot":"/source/"}